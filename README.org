* Hello World

object HW extends App {
   println("Hello world")
}

scalac foo.scala
scala HW

* Command Line Args

args.foreach { arg => println(arg) }

* val vs var

val x = 3 // Immutable
x = x + 1 // Illegal
var y = 4 // Mutable
y = y + 1 // OK

* Loops

val range = 0.until(10) // Range type


* 

val l = List(1,2,3,4)
l.permutations.foreach(println)

*

def f = 3
def g = f _ // prevent eval of f()
def g() = f // Assign function
def g = f // error
 

* Case Classes

** Can omit val usage: class Noun(val word: String, val gender: String) 

case class Noun(word: String, gender: String)
val w = Noun("hombre", "el")
println(w)
println(w.word)
println(w.gender)

* File I/O

val fileLines = io.Source.fromFile("README.org").getLines.toList
fileLines.foreach(println)
fileLines.foreach(l => println(l))

